// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-connector-sdk/tree/main/cmd/paramgen

package destination

import (
	sdk "github.com/conduitio/conduit-connector-sdk"
)

func (Config) Parameters() map[string]sdk.Parameter {
	return map[string]sdk.Parameter{
		"acks": {
			Default:     "all",
			Description: "acks defines the number of acknowledges from partition replicas required before receiving a response to a produce request. None = fire and forget, one = wait for the leader to acknowledge the writes, all = wait for the full ISR to acknowledge the writes.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationInclusion{List: []string{"none", "one", "all"}},
			},
		},
		"batchBytes": {
			Default:     "1000012",
			Description: "batchBytes limits the maximum size of a request in bytes before being sent to a partition. This mirrors Pulsar's max.message.bytes.",
			Type:        sdk.ParameterTypeInt,
			Validations: []sdk.Validation{},
		},
		"caCert": {
			Default:     "",
			Description: "caCert is the Pulsar broker's certificate.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{},
		},
		"clientCert": {
			Default:     "",
			Description: "clientCert is the Pulsar client's certificate.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{},
		},
		"clientKey": {
			Default:     "",
			Description: "clientKey is the Pulsar client's private key.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{},
		},
		"compression": {
			Default:     "snappy",
			Description: "compression set the compression codec to be used to compress messages.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationInclusion{List: []string{"none", "gzip", "snappy", "lz4", "zstd"}},
			},
		},
		"deliveryTimeout": {
			Default:     "",
			Description: "deliveryTimeout for write operation performed by the Writer.",
			Type:        sdk.ParameterTypeDuration,
			Validations: []sdk.Validation{},
		},
		"insecureSkipVerify": {
			Default:     "",
			Description: "insecureSkipVerify defines whether to validate the broker's certificate chain and host name. If 'true', accepts any certificate presented by the server and any host name in that certificate.",
			Type:        sdk.ParameterTypeBool,
			Validations: []sdk.Validation{},
		},
		"topic": {
			Default:     "",
			Description: "topic is the Pulsar topic.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
		"url": {
			Default:     "",
			Description: "url the Apache Pulsar server address.",
			Type:        sdk.ParameterTypeString,
			Validations: []sdk.Validation{
				sdk.ValidationRequired{},
			},
		},
	}
}
